class Script {
  /**
   * @params {object} request
   */
  

  prepare_outgoing_request({ request }) {

    var outtext = request.data.text;
    //var tel_str = outtext.split(/\s+/)[1]
    var tels = outtext.match(/((((13[0-9])|(15[^4])|(18[0,1,2,3,5-9])|(17[0-8])|(147))\d{8}))?/g);
	for(var i=0; i<tels.length; i++){
         if(tels[i] == ""){
        	 tels.splice(i,1);
              i--;
         }
    }
    var content = outtext.substring(tels.length * 12 + 5)

    let match;

    // Change the URL and method of the request
    match = request.data.text.match(/^ding pr\s(ls|list)/);
    if (match) {
      return {
        url: request.url + '/pulls',
        headers: request.headers,
        method: 'GET'
      };
    }
    
    match = request.data.text.match(/^ding/);
    if (match) {
      return {
        url: request.url,
        headers: request.headers,
        method: 'POST',
        data: {"msgtype" : "text","text" : {"content": content}, "at":{"atMobiles":tels}}
      };
    }

    // Prevent the request and return a new message
    match = request.data.text.match(/^ding help$/);
    if (match) {
      return {
        message: {
          text: [
            '**commands**',
            '```',
              '  pr ls [open|closed|all]  List Pull Requests',
            '```'
          ].join('\n')
        }
      };
    }
  }

  /**
   * @params {object} request, response
   */
  process_outgoing_response({ request, response }) {
    // request              {object} - the object returned by prepare_outgoing_request

    // response.error       {object}
    // response.status_code {integer}
    // response.content     {object}
    // response.content_raw {string/object}
    // response.headers     {object}

    var text = [];
    response.content.forEach(function(pr) {
      text.push('> '+pr.state+' [#'+pr.number+']('+pr.html_url+') - '+pr.title);
    });

    // Return false will abort the response
    // return false;

    // Return empty will proceed with the default response process
    // return;

    return {
      content: {
        text: text.join('\n'),
        parseUrls: false
        // "attachments": [{
        //   "color": "#FF0000",
        //   "author_name": "Rocket.Cat",
        //   "author_link": "https://open.rocket.chat/direct/rocket.cat",
        //   "author_icon": "https://open.rocket.chat/avatar/rocket.cat.jpg",
        //   "title": "Rocket.Chat",
        //   "title_link": "https://rocket.chat",
        //   "text": "Rocket.Chat, the best open source chat",
        //   "fields": [{
        //     "title": "Priority",
        //     "value": "High",
        //     "short": false
        //   }],
        //   "image_url": "https://rocket.chat/images/mockup.png",
        //   "thumb_url": "https://rocket.chat/images/mockup.png"
        // }]
      }
    };
  }
}
